# Generated by Django 5.2 on 2025-05-01 01:32

from django.db import migrations


def link_members_to_students(apps, schema_editor):
    """
    Link existing Member records to new Student records
    based on the email address.
    """
    Member = apps.get_model('project_mgmt', 'Member')
    Student = apps.get_model('core', 'Student')
    
    # Get all members
    for member in Member.objects.all():
        if member.student_profile:
            try:
                # Get the email from the user profile
                email = member.student_profile.user_profile.user.email
                
                # Find the corresponding Student record
                student = Student.objects.filter(email=email).first()
                
                if student:
                    # Link the member to the new Student record
                    member.student = student
                    member.save()
                    print(f"Linked Taiga member with role {member.role_name} to student {student.first_name} {student.last_name}")
                else:
                    print(f"Could not find Student record for Taiga member with role {member.role_name} and email {email}")
            except Exception as e:
                print(f"Error linking Taiga member with role {member.role_name}: {e}")


def reverse_migration(apps, schema_editor):
    """
    Reverse migration - remove Student links and rely only on StudentProfile links
    """
    Member = apps.get_model('project_mgmt', 'Member')
    
    for member in Member.objects.all():
        member.student = None
        member.save()


class Migration(migrations.Migration):

    dependencies = [
        ('project_mgmt', '0002_alter_member_unique_together_member_student_profile_and_more'),
    ]

    operations = [
        migrations.RunPython(
            link_members_to_students,
            reverse_migration
        ),
    ]
