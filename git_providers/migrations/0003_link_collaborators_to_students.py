# Generated by Django 5.2 on 2025-05-01 01:21

from django.db import migrations


def link_collaborators_to_students(apps, schema_editor):
    """
    Link existing Collaborator records to new Student records
    based on the email address.
    """
    Collaborator = apps.get_model('git_providers', 'Collaborator')
    Student = apps.get_model('core', 'Student')
    
    # Get all collaborators
    for collaborator in Collaborator.objects.all():
        if collaborator.student_profile:
            try:
                # Get the email from the user profile
                email = collaborator.student_profile.user_profile.user.email
                
                # Find the corresponding Student record
                student = Student.objects.filter(email=email).first()
                
                if student:
                    # Link the collaborator to the new Student record
                    collaborator.student = student
                    collaborator.save()
                    print(f"Linked collaborator {collaborator.username} to student {student.first_name} {student.last_name}")
                else:
                    print(f"Could not find Student record for collaborator {collaborator.username} with email {email}")
            except Exception as e:
                print(f"Error linking collaborator {collaborator.username}: {e}")


def reverse_migration(apps, schema_editor):
    """
    Reverse migration - remove Student links and rely only on StudentProfile links
    """
    Collaborator = apps.get_model('git_providers', 'Collaborator')
    
    for collaborator in Collaborator.objects.all():
        collaborator.student = None
        collaborator.save()


class Migration(migrations.Migration):

    dependencies = [
        ('git_providers', '0002_collaborator_student_profile_and_more'),
    ]

    operations = [
        migrations.RunPython(
            link_collaborators_to_students,
            reverse_migration
        ),
    ]
