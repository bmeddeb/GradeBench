# Generated by Django 5.2 on 2025-05-01 20:05

import core.async_utils
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GitHubToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('token', models.CharField(max_length=255)),
                ('scope', models.CharField(blank=True, max_length=255, null=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('rate_limit_remaining', models.IntegerField(default=5000)),
                ('rate_limit_reset', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            bases=(models.Model, core.async_utils.AsyncModelMixin),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('github_organization', models.CharField(blank=True, max_length=100, null=True)),
                ('github_team_id', models.CharField(blank=True, max_length=100, null=True)),
                ('taiga_project_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            bases=(models.Model, core.async_utils.AsyncModelMixin),
        ),
        migrations.CreateModel(
            name='ProfessorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lms_access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('lms_refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('lms_token_expires', models.DateTimeField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('office_location', models.CharField(blank=True, max_length=100, null=True)),
                ('office_hours', models.TextField(blank=True, null=True)),
                ('github_tokens', models.ManyToManyField(blank=True, to='core.githubtoken')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, core.async_utils.AsyncModelMixin),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('student_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('github_username', models.CharField(blank=True, max_length=100, null=True)),
                ('taiga_username', models.CharField(blank=True, max_length=100, null=True)),
                ('canvas_user_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_students', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='core.team')),
            ],
            bases=(models.Model, core.async_utils.AsyncModelMixin),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('github_username', models.CharField(blank=True, max_length=100, null=True)),
                ('github_access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('github_avatar_url', models.URLField(blank=True, max_length=500, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, core.async_utils.AsyncModelMixin),
        ),
        migrations.CreateModel(
            name='TAProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lms_access_token', models.CharField(blank=True, max_length=255, null=True)),
                ('lms_refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('lms_token_expires', models.DateTimeField(blank=True, null=True)),
                ('hours_per_week', models.PositiveIntegerField(default=20)),
                ('expertise_areas', models.TextField(blank=True, null=True)),
                ('github_tokens', models.ManyToManyField(blank=True, to='core.githubtoken')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.professorprofile')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, core.async_utils.AsyncModelMixin),
        ),
        migrations.AddField(
            model_name='professorprofile',
            name='user_profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile'),
        ),
    ]
